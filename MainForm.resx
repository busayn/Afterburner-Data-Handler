<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>